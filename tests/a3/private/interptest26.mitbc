function
{
	functions =
	[
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None, 0],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [head, len],
					instructions = 
					[
						load_ref	0
						field_load	0
						load_const	0
						eq
						if	0
						goto	1
						0:
						load_const	1
						return
						goto	2
						1:
						load_ref	0
						field_load	0
						field_load	1
						return
						2:
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [1, None],
					parameter_count = 1,
					local_vars = [v],
					local_ref_vars = [],
					free_vars = [this],
					names = [len, car, head, cdr],
					instructions = 
					[
						alloc_record
						dup
						load_ref	0
						field_load	0
						call	0
						load_const	0
						add
						field_store	0
						dup
						load_local	0
						field_store	1
						dup
						load_ref	0
						field_load	2
						field_store	3
						load_ref	0
						swap
						field_store	2
						load_const	1
						return
					]
				},
				function
				{
					functions = [],
					constants = ["", None, ", "],
					parameter_count = 0,
					local_vars = [s, t],
					local_ref_vars = [],
					free_vars = [this],
					names = [print, head, car, cdr],
					instructions = 
					[
						load_ref	0
						field_load	1
						store_local	1
						load_const	0
						store_local	0
						3:
						gc
						load_local	1
						load_const	1
						eq
						not
						if	4
						goto	5
						4:
						load_local	0
						load_local	1
						field_load	2
						add
						load_const	2
						add
						store_local	0
						load_local	1
						field_load	3
						store_local	1
						goto	3
						5:
						load_local	0
						load_global	0
						call	1
						pop
						gc
						load_const	1
						return
					]
				},
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [f, t],
					local_ref_vars = [],
					free_vars = [this],
					names = [head, car, cdr],
					instructions = 
					[
						load_ref	0
						field_load	0
						store_local	1
						6:
						gc
						load_local	1
						load_const	0
						eq
						not
						if	7
						goto	8
						7:
						load_local	1
						field_load	1
						load_local	0
						call	1
						pop
						gc
						load_local	1
						field_load	2
						store_local	1
						goto	6
						8:
						load_const	0
						return
					]
				},
				function
				{
					functions =
					[
						function
						{
							functions = [],
							constants = [None],
							parameter_count = 1,
							local_vars = [n],
							local_ref_vars = [],
							free_vars = [clone],
							names = [len, car, cdr],
							instructions = 
							[
								load_local	0
								load_const	0
								eq
								if	9
								goto	10
								9:
								load_const	0
								return
								goto	11
								10:
								alloc_record
								dup
								load_local	0
								field_load	0
								field_store	0
								dup
								load_local	0
								field_load	1
								field_store	1
								dup
								load_local	0
								field_load	2
								load_ref	0
								call	1
								field_store	2
								return
								11:
								load_const	0
								return
							]
						}
					],
					constants = [None],
					parameter_count = 0,
					local_vars = [clone, rv],
					local_ref_vars = [clone],
					free_vars = [this],
					names = [List, head],
					instructions = 
					[
						load_global	0
						call	0
						store_local	1
						push_ref	0
						load_func	0
						alloc_closure	1
						store_ref	0
						load_ref	1
						field_load	1
						load_ref	0
						call	1
						load_local	1
						swap
						field_store	1
						load_local	1
						return
						load_const	0
						return
					]
				}
			],
			constants = [None],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [head, len, add, print, forall, clone],
			instructions = 
			[
				alloc_record
				dup
				load_const	0
				field_store	0
				dup
				push_ref	0
				load_func	0
				alloc_closure	1
				field_store	1
				dup
				push_ref	0
				load_func	1
				alloc_closure	1
				field_store	2
				dup
				push_ref	0
				load_func	2
				alloc_closure	1
				field_store	3
				dup
				push_ref	0
				load_func	3
				alloc_closure	1
				field_store	4
				dup
				push_ref	0
				load_func	4
				alloc_closure	1
				field_store	5
				store_ref	0
				load_ref	0
				return
				load_const	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [n],
					local_ref_vars = [],
					free_vars = [N, rv],
					names = [add],
					instructions = 
					[
						12:
						gc
						load_local	0
						load_ref	0
						geq
						if	13
						goto	14
						13:
						load_local	0
						load_ref	0
						sub
						store_local	0
						goto	12
						14:
						load_local	0
						load_ref	1
						field_load	0
						call	1
						pop
						gc
						load_const	0
						return
					]
				}
			],
			constants = [None],
			parameter_count = 2,
			local_vars = [lst, N, n, rv],
			local_ref_vars = [N, rv],
			free_vars = [],
			names = [List, forall],
			instructions = 
			[
				load_global	0
				call	0
				store_ref	1
				push_ref	1
				push_ref	0
				load_func	0
				alloc_closure	2
				load_local	0
				field_load	1
				call	1
				pop
				gc
				load_ref	1
				return
				load_const	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [v],
					local_ref_vars = [],
					free_vars = [rv, state],
					names = [v1, car, node, v2, add, cdr],
					instructions = 
					[
						alloc_record
						dup
						load_local	0
						field_store	0
						dup
						load_ref	1
						field_load	2
						field_load	1
						field_store	3
						load_ref	0
						field_load	4
						call	1
						pop
						gc
						load_ref	1
						field_load	2
						field_load	5
						load_ref	1
						swap
						field_store	2
						load_const	0
						return
					]
				}
			],
			constants = [0, None],
			parameter_count = 2,
			local_vars = [l1, l2, rv, state],
			local_ref_vars = [rv, state],
			free_vars = [],
			names = [List, len, add, head, node, forall],
			instructions = 
			[
				15:
				gc
				load_local	0
				field_load	1
				call	0
				load_local	1
				field_load	1
				call	0
				gt
				if	16
				goto	17
				16:
				load_const	0
				load_local	1
				field_load	2
				call	1
				pop
				gc
				goto	15
				17:
				18:
				gc
				load_local	1
				field_load	1
				call	0
				load_local	0
				field_load	1
				call	0
				gt
				if	19
				goto	20
				19:
				load_const	0
				load_local	0
				field_load	2
				call	1
				pop
				gc
				goto	18
				20:
				alloc_record
				dup
				load_local	0
				field_load	3
				field_store	4
				store_ref	1
				load_global	0
				call	0
				store_ref	0
				push_ref	1
				push_ref	0
				load_func	0
				alloc_closure	2
				load_local	1
				field_load	5
				call	1
				pop
				gc
				load_ref	0
				return
				load_const	1
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [0, 1, None],
					parameter_count = 1,
					local_vars = [pair, v],
					local_ref_vars = [],
					free_vars = [N, rv, state],
					names = [v1, v2, carry, add],
					instructions = 
					[
						load_local	0
						field_load	0
						load_local	0
						field_load	1
						add
						load_ref	2
						field_load	2
						add
						store_local	1
						load_const	0
						load_ref	2
						swap
						field_store	2
						21:
						gc
						load_local	1
						load_ref	0
						geq
						if	22
						goto	23
						22:
						load_local	1
						load_ref	0
						sub
						store_local	1
						load_ref	2
						field_load	2
						load_const	1
						add
						load_ref	2
						swap
						field_store	2
						goto	21
						23:
						load_local	1
						load_ref	1
						field_load	3
						call	1
						pop
						gc
						load_const	2
						return
					]
				}
			],
			constants = [0, None],
			parameter_count = 3,
			local_vars = [a, b, N, rv, state, temp, v],
			local_ref_vars = [N, rv, state],
			free_vars = [],
			names = [pair, List, carry, forall, add],
			instructions = 
			[
				load_local	0
				load_local	1
				load_global	0
				call	2
				store_local	5
				alloc_record
				dup
				load_const	0
				field_store	2
				store_ref	2
				load_global	1
				call	0
				store_ref	1
				push_ref	2
				push_ref	1
				push_ref	0
				load_func	0
				alloc_closure	3
				load_local	5
				field_load	3
				call	1
				pop
				gc
				load_ref	2
				field_load	2
				load_const	0
				eq
				not
				if	24
				goto	25
				24:
				load_ref	2
				field_load	2
				load_ref	1
				field_load	4
				call	1
				pop
				gc
				goto	26
				25:
				26:
				load_ref	1
				return
				load_const	1
				return
			]
		},
		function
		{
			functions = [],
			constants = [0, 1, None],
			parameter_count = 3,
			local_vars = [a, smallb, N, i, v],
			local_ref_vars = [],
			free_vars = [],
			names = [List, plus, add],
			instructions = 
			[
				load_const	0
				store_local	3
				load_global	0
				call	0
				store_local	4
				load_const	0
				load_local	4
				field_load	2
				call	1
				pop
				gc
				27:
				gc
				load_local	1
				load_local	3
				gt
				if	28
				goto	29
				28:
				load_local	4
				load_local	0
				load_local	2
				load_global	1
				call	3
				store_local	4
				load_local	3
				load_const	1
				add
				store_local	3
				goto	27
				29:
				load_local	4
				return
				load_const	2
				return
			]
		}
	],
	constants = [10, 0, 5, 15, 6, "After read", "After Mod", "After plus", 60, " x ", 1],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [print, input, intcast, List, modN, pair, plus, mult, N, l, i, add, BASE, l2, l4, l5],
	instructions = 
	[
		load_func	-1
		store_global	0
		load_func	-2
		store_global	1
		load_func	-3
		store_global	2
		load_func	0
		alloc_closure	0
		store_global	3
		load_func	1
		alloc_closure	0
		store_global	4
		load_func	2
		alloc_closure	0
		store_global	5
		load_func	3
		alloc_closure	0
		store_global	6
		load_func	4
		alloc_closure	0
		store_global	7
		load_const	0
		store_global	8
		load_global	3
		call	0
		store_global	9
		load_const	1
		store_global	10
		load_const	2
		load_global	9
		field_load	11
		call	1
		pop
		gc
		load_const	3
		load_global	9
		field_load	11
		call	1
		pop
		gc
		load_const	4
		load_global	9
		field_load	11
		call	1
		pop
		gc
		load_const	0
		store_global	12
		load_const	5
		load_global	0
		call	1
		pop
		gc
		load_global	9
		load_global	12
		load_global	4
		call	2
		store_global	9
		load_const	6
		load_global	0
		call	1
		pop
		gc
		load_global	9
		field_load	0
		call	0
		pop
		gc
		load_global	9
		load_global	9
		load_global	12
		load_global	6
		call	3
		store_global	13
		load_const	7
		load_global	0
		call	1
		pop
		gc
		load_global	13
		load_global	13
		load_global	12
		load_global	6
		call	3
		store_global	14
		load_global	9
		field_load	0
		call	0
		pop
		gc
		load_global	13
		field_load	0
		call	0
		pop
		gc
		load_global	14
		field_load	0
		call	0
		pop
		gc
		load_const	1
		store_global	10
		30:
		gc
		load_const	8
		load_global	10
		gt
		if	31
		goto	32
		31:
		load_const	9
		load_global	10
		add
		load_global	0
		call	1
		pop
		gc
		load_global	14
		load_global	10
		load_global	12
		load_global	7
		call	3
		store_global	15
		load_global	15
		field_load	0
		call	0
		pop
		gc
		load_global	10
		load_const	10
		add
		store_global	10
		goto	30
		32:
		load_const	1
		return
	]
}