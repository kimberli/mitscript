function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [2],
			parameter_count = 0,
			local_vars = [x],
			local_ref_vars = [],
			free_vars = [],
			names = [x],
			instructions = 
			[
				load_const	0
				store_global	0
			]
		},
		function
		{
			functions = [],
			constants = [0],
			parameter_count = 1,
			local_vars = [x],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_const	0
				load_local	0
				call
			]
		},
		function
		{
			functions = [],
			constants = [1],
			parameter_count = 1,
			local_vars = [this],
			local_ref_vars = [],
			free_vars = [],
			names = [print, x],
			instructions = 
			[
				load_local	0
				field_load	1
				load_const	0
				load_global	0
				call
				load_local	0
				field_load	1
				load_const	0
				add
				load_local	0
				swap
				field_store	1
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [],
					parameter_count = 2,
					local_vars = [name, email],
					local_ref_vars = [],
					free_vars = [this],
					names = [db],
					instructions = 
					[
						load_local	1
						push_ref	0
						load_ref
						field_load	0
						swap
						load_local	0
						swap
						index_store
					]
				},
				function
				{
					functions = [],
					constants = [],
					parameter_count = 1,
					local_vars = [name],
					local_ref_vars = [],
					free_vars = [this],
					names = [db],
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_local	0
						index_load
						return
					]
				}
			],
			constants = [1],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [db, getPerson, updatePerson],
			instructions = 
			[
				alloc_record
				dup
				push_ref	0
				load_const	0
				load_func	0
				alloc_closure
				field_store	2
				dup
				push_ref	0
				load_const	0
				load_func	1
				alloc_closure
				field_store	1
				dup
				alloc_record
				field_store	0
				push_ref	0
				swap
				store_ref
				push_ref	0
				load_ref
				return
			]
		}
	],
	constants = [0, 1, 200, "James Lovejoy", "jameslovejoy1@gmail.com", 2],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [Database, f, g, getPerson, input, intcast, myDatabase, print, test, testClass, updatePerson, x],
	instructions = 
	[
		load_const	0
		load_func	0
		alloc_closure
		store_global	7
		load_const	0
		load_func	1
		alloc_closure
		store_global	4
		load_const	0
		load_func	2
		alloc_closure
		store_global	5
		load_const	1
		store_global	11
		load_const	0
		load_func	3
		alloc_closure
		store_global	1
		load_const	0
		load_func	4
		alloc_closure
		store_global	2
		load_global	1
		load_const	1
		load_global	2
		call
		load_global	11
		load_const	1
		load_global	7
		call
		load_const	0
		load_func	5
		alloc_closure
		store_global	8
		alloc_record
		dup
		load_global	8
		field_store	8
		dup
		load_const	0
		field_store	11
		store_global	9
		load_global	9
		field_load	11
		load_const	2
		swap
		gt
		if	2
		goto	7
		load_global	9
		load_const	1
		load_global	9
		field_load	8
		call
		goto	-12
		load_const	0
		load_func	6
		alloc_closure
		store_global	0
		load_const	0
		load_global	0
		call
		store_global	6
		load_const	3
		load_const	4
		load_const	5
		load_global	6
		field_load	10
		call
		load_const	3
		load_const	1
		load_global	6
		field_load	3
		call
		load_const	1
		load_global	7
		call
	]
}