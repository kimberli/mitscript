function
{
	functions =
	[
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [1, None],
					parameter_count = 1,
					local_vars = [item],
					local_ref_vars = [],
					free_vars = [this],
					names = [length],
					instructions = 
					[
						load_local	0
						load_ref	0
						swap
						load_ref	0
						field_load	0
						swap
						index_store
						load_ref	0
						field_load	0
						load_const	0
						add
						load_ref	0
						swap
						field_store	0
						load_const	1
						return
					]
				},
				function
				{
					functions = [],
					constants = [0, "[", 1, ", ", "]", None],
					parameter_count = 0,
					local_vars = [i, x],
					local_ref_vars = [],
					free_vars = [this],
					names = [length],
					instructions = 
					[
						load_const	0
						store_local	0
						load_const	1
						store_local	1
						0:
						gc
						load_ref	0
						field_load	0
						load_local	0
						gt
						if	1
						goto	2
						1:
						load_local	1
						load_ref	0
						load_local	0
						index_load
						add
						store_local	1
						load_local	0
						load_ref	0
						field_load	0
						load_const	2
						sub
						eq
						not
						if	3
						goto	4
						3:
						load_local	1
						load_const	3
						add
						store_local	1
						goto	5
						4:
						5:
						load_local	0
						load_const	2
						add
						store_local	0
						goto	0
						2:
						load_local	1
						load_const	4
						add
						return
						load_const	5
						return
					]
				},
				function
				{
					functions = [],
					constants = [1, None],
					parameter_count = 2,
					local_vars = [start, stop, result],
					local_ref_vars = [],
					free_vars = [this],
					names = [Array, append],
					instructions = 
					[
						load_global	0
						call	0
						store_local	2
						6:
						gc
						load_local	1
						load_local	0
						gt
						if	7
						goto	8
						7:
						load_ref	0
						load_local	0
						index_load
						load_local	2
						field_load	1
						call	1
						pop
						gc
						load_local	0
						load_const	0
						add
						store_local	0
						goto	6
						8:
						load_local	2
						return
						load_const	1
						return
					]
				}
			],
			constants = [0, None],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [length, append, string, splice],
			instructions = 
			[
				alloc_record
				dup
				load_const	0
				field_store	0
				dup
				push_ref	0
				load_func	0
				alloc_closure	1
				field_store	1
				dup
				push_ref	0
				load_func	1
				alloc_closure	1
				field_store	2
				dup
				push_ref	0
				load_func	2
				alloc_closure	1
				field_store	3
				store_ref	0
				load_ref	0
				return
				load_const	1
				return
			]
		},
		function
		{
			functions = [],
			constants = [2, 0, 1, None],
			parameter_count = 1,
			local_vars = [arr, first_half, first_i, result, second_half, second_i],
			local_ref_vars = [],
			free_vars = [],
			names = [mergesort, Array, length, splice, append],
			instructions = 
			[
				load_const	0
				load_local	0
				field_load	2
				gt
				if	9
				goto	10
				9:
				load_local	0
				return
				goto	11
				10:
				11:
				load_const	1
				load_local	0
				field_load	2
				load_const	0
				div
				load_local	0
				field_load	3
				call	2
				load_global	0
				call	1
				store_local	1
				load_local	0
				field_load	2
				load_const	0
				div
				load_local	0
				field_load	2
				load_local	0
				field_load	3
				call	2
				load_global	0
				call	1
				store_local	4
				load_global	1
				call	0
				store_local	3
				load_const	1
				store_local	2
				load_const	1
				store_local	5
				12:
				gc
				load_local	1
				field_load	2
				load_local	2
				gt
				load_local	4
				field_load	2
				load_local	5
				gt
				and
				if	13
				goto	14
				13:
				load_local	4
				load_local	5
				index_load
				load_local	1
				load_local	2
				index_load
				gt
				if	15
				goto	16
				15:
				load_local	1
				load_local	2
				index_load
				load_local	3
				field_load	4
				call	1
				pop
				gc
				load_local	2
				load_const	2
				add
				store_local	2
				goto	17
				16:
				load_local	4
				load_local	5
				index_load
				load_local	3
				field_load	4
				call	1
				pop
				gc
				load_local	5
				load_const	2
				add
				store_local	5
				17:
				goto	12
				14:
				18:
				gc
				load_local	1
				field_load	2
				load_local	2
				gt
				if	19
				goto	20
				19:
				load_local	1
				load_local	2
				index_load
				load_local	3
				field_load	4
				call	1
				pop
				gc
				load_local	2
				load_const	2
				add
				store_local	2
				goto	18
				20:
				21:
				gc
				load_local	4
				field_load	2
				load_local	5
				gt
				if	22
				goto	23
				22:
				load_local	4
				load_local	5
				index_load
				load_local	3
				field_load	4
				call	1
				pop
				gc
				load_local	5
				load_const	2
				add
				store_local	5
				goto	21
				23:
				load_local	3
				return
				load_const	3
				return
			]
		}
	],
	constants = [5, 59, 1, 3, 2, 30, 500, 0, "Unsorted array", "Sorted array"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [print, input, intcast, Array, mergesort, unsorted, append, N, string, sorted],
	instructions = 
	[
		load_func	-1
		store_global	0
		load_func	-2
		store_global	1
		load_func	-3
		store_global	2
		load_func	0
		alloc_closure	0
		store_global	3
		load_func	1
		alloc_closure	0
		store_global	4
		load_global	3
		call	0
		store_global	5
		load_const	0
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	1
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	2
		neg
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	3
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	4
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	0
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	5
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	2
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_const	6
		store_global	7
		24:
		gc
		load_global	7
		load_const	7
		gt
		if	25
		goto	26
		25:
		load_global	7
		load_global	5
		field_load	6
		call	1
		pop
		gc
		load_global	7
		load_const	2
		sub
		store_global	7
		goto	24
		26:
		load_const	8
		load_global	0
		call	1
		pop
		gc
		load_global	5
		field_load	8
		call	0
		load_global	0
		call	1
		pop
		gc
		load_global	5
		load_global	4
		call	1
		store_global	9
		load_const	9
		load_global	0
		call	1
		pop
		gc
		load_global	9
		field_load	8
		call	0
		load_global	0
		call	1
		pop
		gc
		load_const	7
		return
	]
}