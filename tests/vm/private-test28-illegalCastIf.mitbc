function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		}
	],
	constants = [5, 5, "This should print", 5, "This should've been an illegal cast exception"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [input, intcast, print, x],
	labels = {0 : 17; 1 : 22; 2 : 28; 3 : 33},
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	2
		load_func	1
		alloc_closure	0
		store_global	0
		load_func	2
		alloc_closure	0
		store_global	1
		load_const	0
		store_global	3
		load_global	3
		load_const	1
		eq
		if	0
		goto	1
		label	0
		load_global	2
		load_const	2
		call	1
		pop
		label	1
		load_global	3
		load_const	3
		add
		if	2
		goto	3
		label	2
		load_global	2
		load_const	4
		call	1
		pop
		label	3
	]
}