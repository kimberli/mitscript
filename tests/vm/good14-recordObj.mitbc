function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [age],
					names = [],
					labels = {},
					instructions = 
					[
						push_ref	0
						load_ref
						neg
						return
					]
				},
				function
				{
					functions = [],
					constants = [10],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [age],
					names = [],
					labels = {},
					instructions = 
					[
						push_ref	0
						load_ref
						load_const	0
						div
						return
					]
				}
			],
			constants = ["nothing"],
			parameter_count = 3,
			local_vars = [name, age, student, this],
			local_ref_vars = [age],
			free_vars = [],
			names = [print, name, age, student, getGrade, name, age, student, getGrade],
			labels = {0 : 22; 1 : 45},
			instructions = 
			[
				load_local	2
				if	0
				alloc_record
				dup
				load_local	0
				field_store	1
				dup
				load_local	1
				field_store	2
				dup
				load_local	2
				field_store	3
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	4
				store_local	3
				load_local	3
				return
				goto	1
				label	0
				alloc_record
				dup
				load_local	0
				field_store	5
				dup
				load_local	1
				field_store	6
				dup
				load_local	2
				field_store	7
				dup
				load_func	1
				push_ref	0
				alloc_closure	1
				field_store	8
				store_local	3
				load_local	3
				return
				load_global	0
				load_const	0
				call	1
				pop
				label	1
			]
		},
		function
		{
			functions = [],
			constants = [3],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
				load_const	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = ["counting ", " elements"],
					parameter_count = 3,
					local_vars = [a, b, c],
					local_ref_vars = [],
					free_vars = [],
					names = [db, print, size],
					labels = {},
					instructions = 
					[
						load_global	1
						load_const	0
						load_global	0
						field_load	2
						call	0
						add
						load_const	1
						add
						call	1
						pop
						load_local	0
						load_local	1
						add
						load_local	2
						add
						return
					]
				}
			],
			constants = [0],
			parameter_count = 3,
			local_vars = [name1, name2, name3, ans, p1, p2, p3, sum, total],
			local_ref_vars = [],
			free_vars = [],
			names = [db, print, getGrade, getGrade, getGrade, getGrade, getGrade, getGrade],
			labels = {},
			instructions = 
			[
				load_const	0
				store_local	8
				load_global	0
				load_local	0
				index_load
				store_local	4
				load_global	0
				load_local	1
				index_load
				store_local	5
				load_global	0
				load_local	2
				index_load
				store_local	6
				load_local	8
				load_local	4
				field_load	2
				call	0
				add
				store_local	8
				load_local	8
				load_local	5
				field_load	3
				call	0
				add
				store_local	8
				load_local	8
				load_local	6
				field_load	4
				call	0
				add
				store_local	8
				load_func	0
				alloc_closure	0
				store_local	7
				load_local	7
				load_local	4
				field_load	5
				call	0
				load_local	5
				field_load	6
				call	0
				load_local	6
				field_load	7
				call	0
				call	3
				store_local	3
				load_global	1
				load_local	3
				load_local	8
				eq
				call	1
				pop
				load_local	3
				return
			]
		}
	],
	constants = ["Alice", 32, true, "Bob B.", 12, false, "Cathy", 200, false, "total grades: ", "alice", "bob", "cathy"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [addGrades, database, db, input, intcast, person, print, alice, bob, cathy, size, alice, bob, cathy],
	labels = {},
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	6
		load_func	1
		alloc_closure	0
		store_global	3
		load_func	2
		alloc_closure	0
		store_global	4
		load_func	3
		alloc_closure	0
		store_global	5
		alloc_record
		dup
		load_global	5
		load_const	0
		load_const	1
		load_const	2
		call	3
		field_store	7
		dup
		load_global	5
		load_const	3
		load_const	4
		load_const	5
		call	3
		field_store	8
		dup
		load_global	5
		load_const	6
		load_const	7
		neg
		load_const	8
		call	3
		field_store	9
		dup
		load_func	4
		alloc_closure	0
		field_store	10
		store_global	2
		load_global	2
		store_global	1
		load_global	6
		load_global	1
		field_load	11
		call	1
		pop
		load_global	6
		load_global	1
		field_load	12
		call	1
		pop
		load_global	6
		load_global	1
		field_load	13
		call	1
		pop
		load_func	5
		alloc_closure	0
		store_global	0
		load_global	6
		load_const	9
		load_global	0
		load_const	10
		load_const	11
		load_const	12
		call	3
		add
		call	1
		pop
	]
}