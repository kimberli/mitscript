function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None, 0],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [head, head, len],
					labels = {0 : 13; 1 : 16},
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_const	0
						eq
						if	0
						push_ref	0
						load_ref
						field_load	1
						field_load	2
						return
						goto	1
						label	0
						load_const	1
						return
						label	1
					]
				},
				function
				{
					functions = [],
					constants = [1],
					parameter_count = 1,
					local_vars = [v],
					local_ref_vars = [],
					free_vars = [this],
					names = [len, len, car, head, cdr, head],
					labels = {},
					instructions = 
					[
						alloc_record
						dup
						push_ref	0
						load_ref
						field_load	0
						call	0
						load_const	0
						add
						field_store	1
						dup
						load_local	0
						field_store	2
						dup
						push_ref	0
						load_ref
						field_load	3
						field_store	4
						push_ref	0
						load_ref
						swap
						field_store	5
					]
				},
				function
				{
					functions = [],
					constants = ["", ", ", None],
					parameter_count = 0,
					local_vars = [s, t],
					local_ref_vars = [],
					free_vars = [this],
					names = [print, head, car, cdr],
					labels = {2 : 19; 3 : 8},
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	1
						store_local	1
						load_const	0
						store_local	0
						goto	2
						label	3
						load_local	0
						load_local	1
						field_load	2
						add
						load_const	1
						add
						store_local	0
						load_local	1
						field_load	3
						store_local	1
						label	2
						load_local	1
						load_const	2
						eq
						not
						if	3
						load_global	0
						load_local	0
						call	1
						pop
					]
				},
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 1,
					local_vars = [f, t],
					local_ref_vars = [],
					free_vars = [this],
					names = [head, car, cdr],
					labels = {4 : 15; 5 : 6},
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						store_local	1
						goto	4
						label	5
						load_local	0
						load_local	1
						field_load	1
						call	1
						pop
						load_local	1
						field_load	2
						store_local	1
						label	4
						load_local	1
						load_const	0
						eq
						not
						if	5
					]
				},
				function
				{
					functions =
					[
						function
						{
							functions = [],
							constants = [None, None],
							parameter_count = 1,
							local_vars = [n],
							local_ref_vars = [],
							free_vars = [clone],
							names = [len, len, car, car, cdr, cdr],
							labels = {6 : 23; 7 : 26},
							instructions = 
							[
								load_local	0
								load_const	0
								eq
								if	6
								alloc_record
								dup
								load_local	0
								field_load	0
								field_store	1
								dup
								load_local	0
								field_load	2
								field_store	3
								dup
								push_ref	0
								load_ref
								load_local	0
								field_load	4
								call	1
								field_store	5
								return
								goto	7
								label	6
								load_const	1
								return
								label	7
							]
						}
					],
					constants = [],
					parameter_count = 0,
					local_vars = [clone, rv],
					local_ref_vars = [clone],
					free_vars = [this],
					names = [List, head, head],
					labels = {},
					instructions = 
					[
						load_global	0
						call	0
						store_local	1
						load_func	0
						push_ref	0
						alloc_closure	1
						store_local	0
						load_local	0
						push_ref	1
						load_ref
						field_load	1
						call	1
						load_local	1
						swap
						field_store	2
						load_local	1
						return
					]
				}
			],
			constants = [None],
			parameter_count = 0,
			local_vars = [this],
			local_ref_vars = [this],
			free_vars = [],
			names = [head, len, addx, print, forall, clone],
			labels = {},
			instructions = 
			[
				alloc_record
				dup
				load_const	0
				field_store	0
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	1
				dup
				load_func	1
				push_ref	0
				alloc_closure	1
				field_store	2
				dup
				load_func	2
				push_ref	0
				alloc_closure	1
				field_store	3
				dup
				load_func	3
				push_ref	0
				alloc_closure	1
				field_store	4
				dup
				load_func	4
				push_ref	0
				alloc_closure	1
				field_store	5
				store_local	0
				load_local	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [],
					parameter_count = 1,
					local_vars = [n],
					local_ref_vars = [],
					free_vars = [N, rv],
					names = [addx],
					labels = {8 : 8; 9 : 2},
					instructions = 
					[
						goto	8
						label	9
						load_local	0
						push_ref	0
						load_ref
						sub
						store_local	0
						label	8
						load_local	0
						push_ref	0
						load_ref
						geq
						if	9
						push_ref	1
						load_ref
						field_load	0
						load_local	0
						call	1
						pop
					]
				}
			],
			constants = [],
			parameter_count = 2,
			local_vars = [lst, N, rv],
			local_ref_vars = [N, rv],
			free_vars = [],
			names = [List, forall],
			labels = {},
			instructions = 
			[
				load_global	0
				call	0
				store_local	2
				load_local	0
				field_load	1
				load_func	0
				push_ref	1
				push_ref	0
				alloc_closure	2
				call	1
				pop
				load_local	2
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [],
					parameter_count = 1,
					local_vars = [v],
					local_ref_vars = [],
					free_vars = [rv, state],
					names = [addx, v1, node, car, v2, node, cdr, node],
					labels = {},
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						alloc_record
						dup
						load_local	0
						field_store	1
						dup
						push_ref	1
						load_ref
						field_load	2
						field_load	3
						field_store	4
						call	1
						pop
						push_ref	1
						load_ref
						field_load	5
						field_load	6
						push_ref	1
						load_ref
						swap
						field_store	7
					]
				}
			],
			constants = [0, 0],
			parameter_count = 2,
			local_vars = [l1, l2, rv, state],
			local_ref_vars = [rv, state],
			free_vars = [],
			names = [List, addx, len, len, addx, len, len, head, node, forall],
			labels = {10 : 8; 11 : 2; 12 : 24; 13 : 18},
			instructions = 
			[
				goto	10
				label	11
				load_local	1
				field_load	1
				load_const	0
				call	1
				pop
				label	10
				load_local	0
				field_load	2
				call	0
				load_local	1
				field_load	3
				call	0
				gt
				if	11
				goto	12
				label	13
				load_local	0
				field_load	4
				load_const	1
				call	1
				pop
				label	12
				load_local	1
				field_load	5
				call	0
				load_local	0
				field_load	6
				call	0
				gt
				if	13
				alloc_record
				dup
				load_local	0
				field_load	7
				field_store	8
				store_local	3
				load_global	0
				call	0
				store_local	2
				load_local	1
				field_load	9
				load_func	0
				push_ref	1
				push_ref	0
				alloc_closure	2
				call	1
				pop
				load_local	2
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [0, 1],
					parameter_count = 1,
					local_vars = [pair, v],
					local_ref_vars = [],
					free_vars = [N, rv, state],
					names = [v1, v2, carry, carry, carry, carry, addx],
					labels = {14 : 32; 15 : 17},
					instructions = 
					[
						load_local	0
						field_load	0
						load_local	0
						field_load	1
						add
						push_ref	2
						load_ref
						field_load	2
						add
						store_local	1
						load_const	0
						push_ref	2
						load_ref
						swap
						field_store	3
						goto	14
						label	15
						load_local	1
						push_ref	0
						load_ref
						sub
						store_local	1
						push_ref	2
						load_ref
						field_load	4
						load_const	1
						add
						push_ref	2
						load_ref
						swap
						field_store	5
						label	14
						load_local	1
						push_ref	0
						load_ref
						geq
						if	15
						push_ref	1
						load_ref
						field_load	6
						load_local	1
						call	1
						pop
					]
				}
			],
			constants = [0, 0],
			parameter_count = 3,
			local_vars = [a, b, N, rv, state, temp],
			local_ref_vars = [N, rv, state],
			free_vars = [],
			names = [List, pair, carry, forall, carry, addx, carry],
			labels = {16 : 30; 17 : 37},
			instructions = 
			[
				load_global	1
				load_local	0
				load_local	1
				call	2
				store_local	5
				alloc_record
				dup
				load_const	0
				field_store	2
				store_local	4
				load_global	0
				call	0
				store_local	3
				load_local	5
				field_load	3
				load_func	0
				push_ref	2
				push_ref	1
				push_ref	0
				alloc_closure	3
				call	1
				pop
				load_local	4
				field_load	4
				load_const	1
				eq
				not
				if	16
				goto	17
				label	16
				load_local	3
				field_load	5
				load_local	4
				field_load	6
				call	1
				pop
				label	17
				load_local	3
				return
			]
		},
		function
		{
			functions = [],
			constants = [0, 0, 1],
			parameter_count = 3,
			local_vars = [a, smallb, N, i, v],
			local_ref_vars = [],
			free_vars = [],
			names = [List, plus, addx],
			labels = {18 : 23; 19 : 12},
			instructions = 
			[
				load_const	0
				store_local	3
				load_global	0
				call	0
				store_local	4
				load_local	4
				field_load	2
				load_const	1
				call	1
				pop
				goto	18
				label	19
				load_global	1
				load_local	4
				load_local	0
				load_local	2
				call	3
				store_local	4
				load_local	3
				load_const	2
				add
				store_local	3
				label	18
				load_local	3
				load_local	1
				swap
				gt
				if	19
				load_local	4
				return
			]
		}
	],
	constants = [10, 0, 5, 15, 6, 10, "After read", "After Mod", "After plus", 0, " x ", 1, 60],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [BASE, List, N, i, input, intcast, l, l2, l4, l5, modN, mult, pair, plus, print, addx, addx, addx, print, print, print, print, print],
	labels = {20 : 118; 21 : 97},
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	14
		load_func	1
		alloc_closure	0
		store_global	4
		load_func	2
		alloc_closure	0
		store_global	5
		load_func	3
		alloc_closure	0
		store_global	1
		load_func	4
		alloc_closure	0
		store_global	10
		load_func	5
		alloc_closure	0
		store_global	12
		load_func	6
		alloc_closure	0
		store_global	13
		load_func	7
		alloc_closure	0
		store_global	11
		load_const	0
		store_global	2
		load_global	1
		call	0
		store_global	6
		load_const	1
		store_global	3
		load_global	6
		field_load	15
		load_const	2
		call	1
		pop
		load_global	6
		field_load	16
		load_const	3
		call	1
		pop
		load_global	6
		field_load	17
		load_const	4
		call	1
		pop
		load_const	5
		store_global	0
		load_global	14
		load_const	6
		call	1
		pop
		load_global	10
		load_global	6
		load_global	0
		call	2
		store_global	6
		load_global	14
		load_const	7
		call	1
		pop
		load_global	6
		field_load	18
		call	0
		pop
		load_global	13
		load_global	6
		load_global	6
		load_global	0
		call	3
		store_global	7
		load_global	14
		load_const	8
		call	1
		pop
		load_global	13
		load_global	7
		load_global	7
		load_global	0
		call	3
		store_global	8
		load_global	6
		field_load	19
		call	0
		pop
		load_global	7
		field_load	20
		call	0
		pop
		load_global	8
		field_load	21
		call	0
		pop
		load_const	9
		store_global	3
		goto	20
		label	21
		load_global	14
		load_const	10
		load_global	3
		add
		call	1
		pop
		load_global	11
		load_global	8
		load_global	3
		load_global	0
		call	3
		store_global	9
		load_global	9
		field_load	22
		call	0
		pop
		load_global	3
		load_const	11
		add
		store_global	3
		label	20
		load_global	3
		load_const	12
		swap
		gt
		if	21
	]
}