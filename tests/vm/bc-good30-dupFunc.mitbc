function
{
    functions =
    [
        function
        {
            functions = [],
            constants = [],
            parameter_count = 1,
            local_vars = [],
            local_ref_vars = [],
            free_vars = [],
            names = [],
            labels = {},
            instructions =
            [
            ]
        },
        function
        {
            functions = [],
            constants = [],
            parameter_count = 0,
            local_vars = [],
            local_ref_vars = [],
            free_vars = [],
            names = [],
            labels = {},
            instructions =
            [
            ]
        },
        function
        {
            functions = [],
            constants = [],
            parameter_count = 1,
            local_vars = [],
            local_ref_vars = [],
            free_vars = [],
            names = [],
            labels = {},
            instructions =
            [
            ]
        },
        function
        {
            functions = [],
            constants = [],
            parameter_count = 1,
            local_vars = [x],
            local_ref_vars = [],
            free_vars = [],
            names = [],
            labels = {},
            instructions =
            [
              load_local 0
              return
            ]
        }
    ],
    constants = [3, 2, "f and g share a closure so f == g: ", "intcast == intcast: "],
    parameter_count = 0,
    local_vars = [],
    local_ref_vars = [],
    free_vars = [],
    names = [input, intcast, print, f, g],
    labels = {},
    instructions =
    [
      load_func 0
      alloc_closure 0
      store_global  2
      load_func 1
      alloc_closure 0
      store_global  0
      load_func 2
      alloc_closure 0
      store_global  1

      load_func 3
      alloc_closure 0
      dup
      store_global 3
      store_global 4

      load_global 2
	  load_global 3
      load_const  0
      call 1
      call 1

      load_global 2
	  load_global 3
      load_const  1
      call 1
      call 1

      load_global 2
      load_const 2
      load_global 3
      load_global 4
      eq
      add
      call 1

      load_global 2
      load_const 3
      load_global 1
      dup
      eq
      add
      call 1
    ]
}
