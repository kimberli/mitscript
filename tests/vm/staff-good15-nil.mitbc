function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = ["", None],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_const	0
				return
				load_const	1
				return
			]
		},
		function
		{
			functions = [],
			constants = ["[]", None],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
				load_const	0
				return
				load_const	1
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [h],
					names = [],
					instructions = 
					[
						push_ref	0
						load_ref
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [None],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [t],
					names = [],
					instructions = 
					[
						push_ref	0
						load_ref
						return
						load_const	0
						return
					]
				},
				function
				{
					functions = [],
					constants = [", ", None],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [h, t],
					names = [toStr_],
					instructions = 
					[
						push_ref	0
						load_ref
						load_const	0
						add
						push_ref	1
						load_ref
						field_load	0
						call	0
						add
						return
						load_const	1
						return
					]
				},
				function
				{
					functions = [],
					constants = ["[", "]", None],
					parameter_count = 0,
					local_vars = [],
					local_ref_vars = [],
					free_vars = [this],
					names = [toStr_],
					instructions = 
					[
						load_const	0
						push_ref	0
						load_ref
						field_load	0
						call	0
						add
						load_const	1
						add
						return
						load_const	2
						return
					]
				}
			],
			constants = [None],
			parameter_count = 2,
			local_vars = [h, t, this],
			local_ref_vars = [h, t, this],
			free_vars = [],
			names = [head, tail, toStr_, toStr],
			instructions = 
			[
				alloc_record
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	0
				dup
				load_func	1
				push_ref	1
				alloc_closure	1
				field_store	1
				dup
				load_func	2
				push_ref	1
				push_ref	0
				alloc_closure	2
				field_store	2
				dup
				load_func	3
				push_ref	2
				alloc_closure	1
				field_store	3
				store_local	2
				load_local	2
				return
				load_const	0
				return
			]
		},
		function
		{
			functions = [],
			constants = [None],
			parameter_count = 2,
			local_vars = [list, f],
			local_ref_vars = [],
			free_vars = [],
			names = [Nil, forall, head, tail],
			instructions = 
			[
				load_local	0
				load_global	0
				eq
				if	13
				load_local	1
				load_local	0
				field_load	2
				call	0
				call	1
				load_global	1
				load_local	0
				field_load	3
				call	0
				load_local	1
				call	2
				goto	1
				load_const	0
				return
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = ["Bigger ", 1, None],
					parameter_count = 1,
					local_vars = [x],
					local_ref_vars = [],
					free_vars = [],
					names = [print],
					instructions = 
					[
						load_global	0
						load_const	0
						load_local	0
						load_const	1
						add
						add
						call	1
						load_const	2
						return
					]
				}
			],
			constants = [None],
			parameter_count = 1,
			local_vars = [l],
			local_ref_vars = [],
			free_vars = [],
			names = [forall],
			instructions = 
			[
				load_global	0
				load_local	0
				load_func	0
				alloc_closure	0
				call	2
				load_local	0
				return
				load_const	0
				return
			]
		}
	],
	constants = [1, 2, 3, "a", "b", "c"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [Cons, Nil, f, forall, input, intcast, l, print, toStr_, toStr, toStr],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	7
		load_func	1
		alloc_closure	0
		store_global	4
		load_func	2
		alloc_closure	0
		store_global	5
		alloc_record
		dup
		load_func	3
		alloc_closure	0
		field_store	8
		dup
		load_func	4
		alloc_closure	0
		field_store	9
		store_global	1
		load_func	5
		alloc_closure	0
		store_global	0
		load_func	6
		alloc_closure	0
		store_global	3
		load_global	0
		load_const	0
		load_global	0
		load_const	1
		load_global	0
		load_const	2
		load_global	1
		call	2
		call	2
		call	2
		store_global	6
		load_global	3
		load_global	6
		load_global	7
		call	2
		load_func	7
		alloc_closure	0
		store_global	2
		load_global	2
		load_global	6
		call	1
		load_global	7
		load_global	2
		load_global	0
		load_const	3
		load_global	0
		load_const	4
		load_global	0
		load_const	5
		load_global	1
		call	2
		call	2
		call	2
		call	1
		call	1
		load_global	7
		load_global	6
		field_load	10
		call	0
		call	1
	]
}