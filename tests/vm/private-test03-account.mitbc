function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			labels = {},
			instructions = 
			[
			]
		},
		function
		{
			functions =
			[
				function
				{
					functions = [],
					constants = [0],
					parameter_count = 1,
					local_vars = [name],
					local_ref_vars = [],
					free_vars = [private],
					names = [balances],
					labels = {},
					instructions = 
					[
						load_const	0
						push_ref	0
						load_ref
						field_load	0
						swap
						load_local	0
						swap
						index_store
					]
				},
				function
				{
					functions = [],
					constants = [None, 1],
					parameter_count = 1,
					local_vars = [name],
					local_ref_vars = [],
					free_vars = [private, this],
					names = [balances, addClient, balances, balances],
					labels = {0 : 10; 1 : 17},
					instructions = 
					[
						push_ref	0
						load_ref
						field_load	0
						load_local	0
						index_load
						load_const	0
						eq
						if	0
						goto	1
						label	0
						push_ref	1
						load_ref
						field_load	1
						load_local	0
						call	1
						pop
						label	1
						push_ref	0
						load_ref
						field_load	2
						load_local	0
						index_load
						load_const	1
						add
						push_ref	0
						load_ref
						field_load	3
						swap
						load_local	0
						swap
						index_store
					]
				},
				function
				{
					functions = [],
					constants = ["Balance for ", " is "],
					parameter_count = 1,
					local_vars = [name],
					local_ref_vars = [],
					free_vars = [private],
					names = [print, balances],
					labels = {},
					instructions = 
					[
						load_global	0
						load_const	0
						load_local	0
						add
						load_const	1
						add
						push_ref	0
						load_ref
						field_load	1
						load_local	0
						index_load
						add
						call	1
						pop
					]
				}
			],
			constants = [],
			parameter_count = 0,
			local_vars = [private, this],
			local_ref_vars = [private, this],
			free_vars = [],
			names = [balances, addClient, increment, print],
			labels = {},
			instructions = 
			[
				alloc_record
				dup
				alloc_record
				field_store	0
				store_local	0
				alloc_record
				dup
				load_func	0
				push_ref	0
				alloc_closure	1
				field_store	1
				dup
				load_func	1
				push_ref	1
				push_ref	0
				alloc_closure	2
				field_store	2
				dup
				load_func	2
				push_ref	0
				alloc_closure	1
				field_store	3
				store_local	1
				load_local	1
				return
			]
		}
	],
	constants = ["Armando", "Armando", "Armando", "Armando", "Michael", "Michael"],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [Account, acc, input, intcast, print, addClient, print, increment, print, increment, print],
	labels = {},
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	4
		load_func	1
		alloc_closure	0
		store_global	2
		load_func	2
		alloc_closure	0
		store_global	3
		load_func	3
		alloc_closure	0
		store_global	0
		load_global	0
		call	0
		store_global	1
		load_global	1
		field_load	5
		load_const	0
		call	1
		pop
		load_global	1
		field_load	6
		load_const	1
		call	1
		pop
		load_global	1
		field_load	7
		load_const	2
		call	1
		pop
		load_global	1
		field_load	8
		load_const	3
		call	1
		pop
		load_global	1
		field_load	9
		load_const	4
		call	1
		pop
		load_global	1
		field_load	10
		load_const	5
		call	1
		pop
	]
}