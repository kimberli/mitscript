function
{
	functions =
	[
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 0,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [],
			parameter_count = 1,
			local_vars = [],
			local_ref_vars = [],
			free_vars = [],
			names = [],
			instructions = 
			[
			]
		},
		function
		{
			functions = [],
			constants = [1, 1, "fac of ", 1, " is ", None],
			parameter_count = 1,
			local_vars = [x, v],
			local_ref_vars = [],
			free_vars = [],
			names = [fac, print],
			instructions = 
			[
				load_local	0
				load_const	0
				swap
				geq
				if	2
				goto	3
				load_local	0
				return
				load_global	0
				load_local	0
				load_const	1
				sub
				call	1
				store_local	1
				load_global	1
				load_const	2
				load_local	0
				load_const	3
				sub
				add
				load_const	4
				add
				load_local	1
				add
				call	1
				load_local	0
				load_local	1
				mul
				return
				load_const	5
				return
			]
		}
	],
	constants = [5, "fac of ", " is "],
	parameter_count = 0,
	local_vars = [],
	local_ref_vars = [],
	free_vars = [],
	names = [fac, input, intcast, print, v, x],
	instructions = 
	[
		load_func	0
		alloc_closure	0
		store_global	3
		load_func	1
		alloc_closure	0
		store_global	1
		load_func	2
		alloc_closure	0
		store_global	2
		load_const	0
		store_global	5
		load_func	3
		alloc_closure	0
		store_global	0
		load_global	0
		load_global	5
		call	1
		store_global	4
		load_global	3
		load_const	1
		load_global	5
		add
		load_const	2
		add
		load_global	4
		add
		call	1
	]
}